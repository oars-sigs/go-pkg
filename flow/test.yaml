values: 
  arr: []
  a: 1.1
  b: 2.2
  ddd: 
  - 1
  - 2
  aa: "ck"
  c: 1
  # aaa:
  #   ddd: sss
  ss:
    a:
      aa:
      - 1
      - 2
    b:
      bb:
      - 3
      - 4
# modules:
#   - name: d
#     tasks:
#     - print: $.values
#     - sum:
#         x: $.values.aa
#         "y":  $.values.bb
#       output: $.values.res
#     output: $.values.res
tasks:
  - print: a
    loop: $.values.arr
  # - js:
  #     script: |
  #       var d = new Decimal(0.3)
  #       var x = new Decimal(0.1)
  #       console.log(d<x)
        
  #       console.log(d.toFixed(2))
  #       var _ = require("./testdata/lodash.js");
  #       console.log(_.endsWith('abc', 'c'))
        
  #     args: $.values
  # - tasks:
  #   - print: aaaa
  #   - print: $.ctx.item
  #   - break: {}
  #     when: values.c == 1
  #   loop: $.values.ddd
  # - setface: $.values.aa
  #   output: $.values.ddd
  #   debug: true
  # - print: $.values.ddd
  # - print: dd
  #   when: values.ss.a.aa[0] == 1
  # - print: $.ctx.itemKey
  #   loop: $.values.ss
  # - tasks:
  #   - print: $.ctx.item
  #   - setface: $.ctx.item
  #     output: $.ctx.a
  #     debug: true
  #   - print: $.ctx.a
  #   - tasks:
  #     - print: $.ctx.item
  #       loop: $.ctx.item
  #     loop: $.ctx.item
  #   loop: $.values.ss
  # - print: $.values.aaa.ddd
  # - defer:
  #   - print: defer aaaaa
  # - print: ddddd
  # - defer:
  #   - print: defer ttttt
  # - tasks:
  #   - print: sub1111
  #   - defer:
  #     - print: defer sub1111
  #   - js:
  #       script: |
  #          sys.gdefer(function(){
  #             console.log('defer subhhhhhhh')
  #           })
  #   - print: sub22222
  # - js:
  #     script: |
  #       sys.defer(function(){
  #         console.log('defer ggggg')
  #       })
  #       sys.gdefer(function(){
  #         console.log('defer hhhhhhh')
  #       })
  #       console.log('yyyyy')
  # - print: ccccc
  # - cron:
  #     expr: '0 * * * * *'
  #     tasks:
  #     - print: aaaaa
  # - server:
  #     port: 9898
  #     routes:
  #       - method: GET
  #         path: "/a"
  #         file: task.yaml
  #         tasks:
  #         - print: $$.ctx
  #         - sum:
  #             x: 1
  #             "y": 1
  #           output: $$.ctx.resp
  #         - print: $$.ctx.resp
  # - d: 
  #     aa: 112.5
  #     bb: $.ctx.item
  #   output: $.values.a
  #   loop: 
  #   - 1
  #   - 2
  # - print: $.values
  # - tasks:
  #   - sum:
  #       x: 1
  #       "y": 3
  #     output: $.values.a
  #     sync: c
  #   - print: $.values.a
  #   - print: out2:{{.values.a}}
  #     await: ["c"]
  #   async: a
  # - print: $.values.a
  # - print: $.values.a
  # - print: $.values.a
  #   await: ["a"]
  # - print: $.values.a
  # - print: $.values.a
  # - js:
  #     script: |
  #       console.log(sys.args.a)
  #       sys.output(sys.args.a+1)
  #     args: 
  #       a: $.values.a
  #   output: $.values.b
  # - print: $.values
  # - id: "1"
  #   sum: 
  #     x: $.values.aa
  #     "y": 12
  #   output: "$.values.res"
  # - id: "2"
  #   print: "$.values.res"
  # - id: "3"
  #   async: "a"
  #   tasks:
  #     - id: "1"
  #       print: "3-1"
  #     - id: "2"
  #       print: "3-2"
  #       sleep: 2
  #     - id: "3"
  #       switch:
  #         key: a
  #         task:
  #           a: "1"
  #     # - id: "4"
  #     #   print: "3-4"
  # - id: "4"
  #   tasks: 
  #   - print: $.ctx.item
  #   - print: $.ctx.itemKey
  #   loop:
  #     a: 1
  #     b: 2
  # - id: "5"
  #   print: "444"
  #   await: ["a"]